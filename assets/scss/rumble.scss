// colours for severity circle/blobs
$sev-critical: #F236F6;
$sev-high: #3443F4;
$sev-medium: #1F2892;
$sev-low: #16C0D7;
$sev-negligible: #C5C5C5;
$sev-unknown: #8C8C8C;

// [id^="rumble"] matches across comparison and vulnerability pages.
// e.g. id="rumble" and id="rumble-vuln" both match the selector,
// which makes these styles work for both pages

[id^="rumble"] .search {
  order: 5;
  flex: 1;
}

[id^="rumble"] .search ul {
  list-style: none;
  height: 1rem;
  float: right;
  margin: 0;
}

[id^="rumble"] .search ul li {
  display: inline-flex;
}

[id^="rumble"] .search ul li input {
  margin: 0;
  min-width: 160px;
  height: 48px !important;
  vertical-align: middle;
  font-size: 16px;
  padding: 0 1rem 0 2rem;

  background: var(--search-icon-url) !important;
  background-repeat: no-repeat !important;
  background-color: var(--search-background) !important;
  background-position: 10px 16px !important;
}

.tables {
  display: flex;
  flex-wrap: wrap;
  margin-top: 42px;
}

// empty span, used as the background for segmented button
.tables #segmentBackground {
  position: absolute;
  background: var(--segmented-button-background);
  width: 222px;
  height: 48px;
  z-index: -1;
  border-radius: 100px;
}

.tables label {
  order: 0; // Put the labels first
  padding: 8px 16px 8px 16px;
  background: none;
  cursor: pointer;
  border: none;
  border-radius: 100px;
  font-family: Inter;
  font-size: 16px;
  font-weight: 500;
  line-height: 24px;
  letter-spacing: 0em;
  text-align: left;
  height: 42px;
  color: var(--segmented-button-color);
  margin: 3px -4px 0 4px;
}

// needed since tables and labels are intermixed in the DOM
// must make tables last for segmented selector to work
.tables .tab-content {
  order: 99; // Put the tabs last
  width: 100%;
  display: none;
  background: none;
  table-layout: fixed;
  margin: 42px 0 0 0 !important; //
}

// make table headings stick when scrolling
.tables table th {
  font-weight: 500 !important;
  position: sticky;
  top: 0;
  background: var(--table-row-background);
}

.tables table thead tr {
  border-bottom: 1px solid var(--table-row-border-color) !important;
}

.tables table tbody tr:hover {
  background: var(--table-row-hover-background);
}

.tables input[type="radio"] {
  display: none;
}

.tables input[type="radio"]:checked+label {
  background: #6772F7;
  color: white;
}

// show table when its radio is checked, default is display: none
.tables input[type="radio"]:checked+label+.tab-content {
  display: block;

  table {
    --bs-table-bg: none;
    border-collapse: separate;
    border-spacing: 0px;
    margin: 0 !important;

    tbody {
      border-top: none !important;

      tr {
        color: var(--table-vulnerability-color);
        //border-left: 1px solid var(--table-row-background) !important;
        //border-right: 1px solid var(--table-row-background) !important;

        // add borders on hover to show where cursor is
        &:hover {
          background: var(--table-row-hover-background);
          //border-right: 1px solid var(--table-row-border-color) !important;
          //border-left: 1px solid var(--table-row-border-color) !important;
        }

        td a {
          color: var(--table-vulnerability-color);
        }
      }
    }
  }
}

// only comparison page table rows are links
#rumble .tables table tbody tr:hover {
  cursor: pointer;
}

// remove info icon on vulnerability info pages
blockquote::before {
  content: none;
}

// Severity dropdown container
#severity-picker {
  padding: 0 0 0 1rem !important;
  height: 48px !important;
  width: 160px;
  background: var(--severity-background);
  border: 1px solid var(--severity-border);
  position: relative;
  border-radius: 4px;
  margin: 0 0 0 1.5rem !important;
  top: -2px;

  .bi-chevron-down {
    position: absolute;
    right: 1rem;
  }

  // severity dropdown span
  .severity {
    padding: 0 0.5rem 0 0;
    font-size: 0.75rem;
    vertical-align: top;
  }

  // coloured circles in dropdown menu
  .sev-critical {
    color: $sev-critical;
    font-size: 8px;
  }

  .sev-high {
    color: $sev-high;
    font-size: 8px;
  }

  .sev-medium {
    color: $sev-medium;
    font-size: 8px;
  }

  .sev-low {
    color: $sev-low;
    font-size: 8px;
  }

  .sev-negligible {
    color: $sev-negligible;
    font-size: 8px;
  }

  .sev-unknown {
    color: $sev-unknown;
    font-size: 8px;
  }

  // severity dropdown button
  .dropdown-btn {
    width: 160px;
    border: none;
    color: var(--severity-color);
    display: flex;
    justify-content: space-between;
    align-items: center;
    cursor: pointer;
    padding: 0 !important;
    margin: 0;

    span {
      margin: 0 0 0 0;
      font-weight: normal;

      &::selection {
        background: none;
      }
    }
  }

  // container for dropdown items
  .dropdown-content {
    list-style: none;
    position: absolute;
    top: 3em;
    width: 160px;
    visibility: hidden;
    z-index: 100;
    margin: -3px 0 0 0;
    left: -1px;
    border-top: 1px solid var(--severity-border);
    padding: 0;
  }

  // severity dropdown items
  .dropdown-content li {
    background: var(--severity-background);
    display: block;
    width: 160px;
    float: left;
    border-left: 1px solid var(--severity-border);
    border-right: 1px solid var(--severity-border);
    padding: 0.3rem 0 0.3rem 1.5rem;
    cursor: pointer;

    // need a bottom border for the dropdown
    &:last-child {
      border-bottom: 1px solid var(--severity-border);
    }
  }

  .dropdown-content li:hover {
    background: var(--severity-background);
  }

  .dropdown-content li span {

    // don't show highlighted text selections
    &::selection {
      background: none;
    }
  }

  .dropdown:focus-within .dropdown-content li {
    left: 0;
  }

  .dropdown:focus-within .dropdown-content {
    visibility: visible;
  }

  // used to toggle dropdown menu
  input[type="checkbox"] {
    opacity: 0;
    position: absolute;
  }

  input[type="checkbox"]:checked~.dropdown-content {
    visibility: visible;
  }

}